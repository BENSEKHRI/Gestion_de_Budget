<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Fait extends \App\Entity\Fait implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actual', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budget', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'canal', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'geographie', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actual1', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actual2', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budget1', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budget2', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'produit', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actualVol', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budgetVol', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actualVol1', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budgetVol1', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actualVol2', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budgetVol2'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actual', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budget', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'canal', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'geographie', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actual1', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actual2', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budget1', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budget2', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'produit', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actualVol', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budgetVol', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actualVol1', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budgetVol1', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'actualVol2', '' . "\0" . 'App\\Entity\\Fait' . "\0" . 'budgetVol2'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Fait $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getActual(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActual', []);

        return parent::getActual();
    }

    /**
     * {@inheritDoc}
     */
    public function setActual(float $actual): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActual', [$actual]);

        return parent::setActual($actual);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudget(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudget', []);

        return parent::getBudget();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudget(float $budget): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudget', [$budget]);

        return parent::setBudget($budget);
    }

    /**
     * {@inheritDoc}
     */
    public function getCanal(): ?\App\Entity\Canal
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCanal', []);

        return parent::getCanal();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanal(?\App\Entity\Canal $canal): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanal', [$canal]);

        return parent::setCanal($canal);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeographie(): ?\App\Entity\Geographie
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeographie', []);

        return parent::getGeographie();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeographie(?\App\Entity\Geographie $geographie): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeographie', [$geographie]);

        return parent::setGeographie($geographie);
    }

    /**
     * {@inheritDoc}
     */
    public function getActual1(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActual1', []);

        return parent::getActual1();
    }

    /**
     * {@inheritDoc}
     */
    public function setActual1(?float $actual1): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActual1', [$actual1]);

        return parent::setActual1($actual1);
    }

    /**
     * {@inheritDoc}
     */
    public function getActual2(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActual2', []);

        return parent::getActual2();
    }

    /**
     * {@inheritDoc}
     */
    public function setActual2(?float $actual2): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActual2', [$actual2]);

        return parent::setActual2($actual2);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudget1(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudget1', []);

        return parent::getBudget1();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudget1(?float $budget1): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudget1', [$budget1]);

        return parent::setBudget1($budget1);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudget2(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudget2', []);

        return parent::getBudget2();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudget2(?float $budget2): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudget2', [$budget2]);

        return parent::setBudget2($budget2);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduit(): ?\App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduit', []);

        return parent::getProduit();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduit(?\App\Entity\Produit $produit): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduit', [$produit]);

        return parent::setProduit($produit);
    }

    /**
     * {@inheritDoc}
     */
    public function getActualVol(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActualVol', []);

        return parent::getActualVol();
    }

    /**
     * {@inheritDoc}
     */
    public function setActualVol(?int $actualVol): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActualVol', [$actualVol]);

        return parent::setActualVol($actualVol);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudgetVol(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudgetVol', []);

        return parent::getBudgetVol();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudgetVol(?int $budgetVol): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudgetVol', [$budgetVol]);

        return parent::setBudgetVol($budgetVol);
    }

    /**
     * {@inheritDoc}
     */
    public function getActualVol1(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActualVol1', []);

        return parent::getActualVol1();
    }

    /**
     * {@inheritDoc}
     */
    public function setActualVol1(int $actualVol1): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActualVol1', [$actualVol1]);

        return parent::setActualVol1($actualVol1);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudgetVol1(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudgetVol1', []);

        return parent::getBudgetVol1();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudgetVol1(int $budgetVol1): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudgetVol1', [$budgetVol1]);

        return parent::setBudgetVol1($budgetVol1);
    }

    /**
     * {@inheritDoc}
     */
    public function getActualVol2(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActualVol2', []);

        return parent::getActualVol2();
    }

    /**
     * {@inheritDoc}
     */
    public function setActualVol2(?int $actualVol2): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActualVol2', [$actualVol2]);

        return parent::setActualVol2($actualVol2);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudgetVol2(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudgetVol2', []);

        return parent::getBudgetVol2();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudgetVol2(?int $budgetVol2): \App\Entity\Fait
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudgetVol2', [$budgetVol2]);

        return parent::setBudgetVol2($budgetVol2);
    }

}
